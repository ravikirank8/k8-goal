What is the network interface configured for cluster connectivity on the controlplane node?
Run: kubectl get nodes -o wide to see the IP address assigned to the controlplane node.

root@controlplane:~# kubectl get nodes controlplane -o wide
NAME           STATUS   ROLES                  AGE     VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION   CONTAINER-RUNTIME
controlplane   Ready    control-plane,master   4h46m   v1.20.0   10.3.116.12   <none>        Ubuntu 18.04.5 LTS   5.4.0-1041-gcp   docker://19.3.0
root@controlplane:~#
In this case, the internal IP address used for node for node to node communication is 10.3.116.12.

Important Note : The result above is just an example, the node IP address will vary for each lab.

Next, find the network interface to which this IP is assigned by making use of the ip a command:

root@controlplane:~# ip a | grep -B2 10.3.116.12
16476: eth0@if16477: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP group default 
    link/ether 02:42:0a:03:74:0c brd ff:ff:ff:ff:ff:ff link-netnsid 0
    inet 10.3.116.12/24 brd 10.3.116.255 scope global eth0
root@controlplane:~# 
Here you can see that the interface associated with this IP is eth0 on the host.


What is the MAC address assigned to node01?
ssh node01
ip link show

show network interface
ip r l

what is state of cni0 - status of inteIf you were to ping google from the controlplane node, which route does it take?
ip link show cni0


If you were to ping google from the controlplane node, which route does it take
What is the IP address of the Default Gateway?rface
ip route show default

on which port the component running on
 netstat -plnt | grep -i kube-scheduler
 
 Notice that ETCD is listening on two ports. Which of these have more client connections established?
 netstat -plnt | grep -i etcd
 netstat -anp | grep etcd | grep 2381 | wc -l


What is the path configured with all binaries of CNI supported plugins?
/opt/cni/bin


What is the CNI plugin configured to be used on this kubernetes cluster?
ls /etc/cni/net.d/

What binary executable file will be run by kubelet after a container and its associated namespace are created?
Look at the type field in file /etc/cni/net.d/10-flannel.conflist.

How many weave agent deployed on cluster
kubectl get pods -n kube-system

identiy bridge network created by weave
ip link

check ip address range created by weave 
ip addr show weave

check default gateway and look the weave at end of link ip src:  ip route


What network range are the nodes in the cluster part of?
short answer: ip addr show eth0
lengthy answer:
one way to do this is to make use of the ipcalc utility. If it is not installed, you can install it by running: apt update and the apt install ipcalc

Then use it to determine the network range as shown below:

First, find the Internal IP of the nodes.

root@controlplane:~> ip a | grep eth0
93657: eth0@if93658: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP group default 
    inet 10.33.39.8/24 brd 10.33.39.255 scope global eth0

root@controlplane:~>


Next, use the ipcalc tool to see the network details:

root@controlplane:~> ipcalc -b 10.33.39.8
Address:   10.33.39.8           
Netmask:   255.255.255.0 = 24   
Wildcard:  0.0.0.255            
=>
Network:   10.33.39.0/24        
HostMin:   10.33.39.1           
HostMax:   10.33.39.254         
Broadcast: 10.33.39.255         
Hosts/Net: 254                   Class A, Private Internet

root@controlplane:~>


In this example, the network is 10.33.39.0/24. Note, this may vary for your lab so make sure to check for yourself.

What is the range of IP addresses configured for PODs on this cluster?
ip addr show weave
The network is configured with weave. Check the weave pods logs using the command kubectl logs <weave-pod-name> weave -n kube-system and look for ipalloc-range.

What is the IP Range configured for the services within the cluster?
Inspect the setting on kube-api server by running on command cat /etc/kubernetes/manifests/kube-apiserver.yaml | grep cluster-ip-range

What type of proxy is the kube-proxy configured to use?
Check the logs of the kube-proxy pods. Run the command: kubectl logs <kube-proxy-pod-name> -n kube-system

How does this Kubernetes cluster ensure that a kube-proxy pod runs on all nodes in the cluster?
kubectl get ds -n kube-system
