Install the kubeadm and kubelet packages on the controlplane and node01.
Use the exact version of 1.26.0-00 for both

kubeadm installed on controlplane ?
kubelet installed on controlplane?
Kubeadm installed on worker node01 ?
Kubelet installed on worker node01 ?

These steps have to be performed on both nodes.

set net.bridge.bridge-nf-call-iptables to 1:

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system
The container runtime has already been installed on both nodes, so you may skip this step. Install kubeadm, kubectl and kubelet on all nodes:

sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl

sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update
sudo apt-get install -y kubelet=1.26.0-00 kubeadm=1.26.0-00 kubectl=1.26.0-00
sudo apt-mark hold kubelet kubeadm kubectl

==================================================================================

Initialize Control Plane Node (Master Node). Use the following options:


apiserver-advertise-address - Use the IP address allocated to eth0 on the controlplane node

apiserver-cert-extra-sans - Set it to controlplane

pod-network-cidr - Set to 10.244.0.0/16
Once done, set up the default kubeconfig file and wait for node to be part of the cluster.

run kubeadm init --apiserver-cert-extra-sans=controlplane --apiserver-advertise-address 10.33.92.10 --pod-network-cidr=10.244.0.0/16
The IP address used here is just an example. It will change for your lab session. Make sure to check the IP address allocated to eth0 by running:

root@controlplane:~# ifconfig eth0

==========




To create token:

Join node01 to the cluster using the join token



root@controlplane:~> kubeadm token create --print-join-command
kubeadm join 10.33.92.10:6443 --token d3qmbz.wbotnx9alm0gbi4s --discovery-token-ca-cert-hash sha256:ffaddad5d14644d9ec0d421b729a17a17a80726d78b301521efb48fd9af719eb 


next, SSH to the node01 and run the join command on the terminal:

