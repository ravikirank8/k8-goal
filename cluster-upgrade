os-upgrade
kubectl drain node01 - removed pods
kubectl cordon node01 - unschudele
kubectl uncordon node01 - schedule it
unless there is taint plain if u drain a node pods never get back. it only ready to server new pods


kubelet should update manually 

apiserver should be in higher version when you upgrades
 kube-proxy and x-2 lower version
others should should be x-1 version
kubelet can x+1 or x-1 version


You are tasked to upgrade the cluster. Users accessing the applications must not be impacted, and you cannot provision new VMs.
What strategy would you use to upgrade the cluster?

upgrade one node at time and moving work loads to other nodes


What is the latest stable version of Kubernetes as of today?
Look at the remote version in the output of the kubeadm upgrade plan command.


controlplane ~ ✖ kubeadm upgrade plan
[upgrade/config] Making sure the configuration is correct:
[upgrade/config] Reading configuration from the cluster...
[upgrade/config] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
[preflight] Running pre-flight checks.
[upgrade] Running cluster health checks
[upgrade] Fetching available versions to upgrade to
[upgrade/versions] Cluster version: v1.25.0
[upgrade/versions] kubeadm version: v1.25.0
I0301 03:15:26.578551   14980 version.go:256] remote version is much newer: v1.26.2; falling back to: stable-1.25
[upgrade/versions] Target version: v1.25.7
[upgrade/versions] Latest version in the v1.25 series: v1.25.7

Components that must be upgraded manually after you have upgraded the control plane with 'kubeadm upgrade apply':
COMPONENT   CURRENT       TARGET
kubelet     2 x v1.25.0   v1.25.7

Upgrade to the latest version in the v1.25 series:

COMPONENT                 CURRENT   TARGET
kube-apiserver            v1.25.0   v1.25.7
kube-controller-manager   v1.25.0   v1.25.7
kube-scheduler            v1.25.0   v1.25.7
kube-proxy                v1.25.0   v1.25.7
CoreDNS                   v1.9.3    v1.9.3
etcd                      3.5.4-0   3.5.4-0

You can now apply the upgrade by executing the following command:

        kubeadm upgrade apply v1.25.7

Note: Before you can perform this upgrade, you have to update kubeadm to v1.25.7.

_____________________________________________________________________


The table below shows the current state of component configs as understood by this version of kubeadm.
Configs that have a "yes" mark in the "MANUAL UPGRADE REQUIRED" column require manual config upgrade or
resetting to kubeadm defaults before a successful upgrade can be performed. The version to manually
upgrade to is denoted in the "PREFERRED VERSION" column.

API GROUP                 CURRENT VERSION   PREFERRED VERSION   MANUAL UPGRADE REQUIRED
kubeproxy.config.k8s.io   v1alpha1          v1alpha1            no
kubelet.config.k8s.io     v1beta1           v1beta1             no
_____________________________________________________________________



We will be upgrading the controlplane node first. Drain the controlplane node of workloads and mark it UnSchedulable



Upgrade the controlplane components to exact version v1.26.0

Upgrade the kubeadm tool (if not already), then the controlplane components, and finally the kubelet. Practice referring to the Kubernetes documentation page.
Note: While upgrading kubelet, if you hit dependency issues while running the apt-get upgrade kubelet command, use the apt install kubelet=1.26.0-00 command instead.

Controlplane Node Upgraded to v1.26.0
Controlplane Kubelet Upgraded to v1.26.0


On the controlplane node, run the following commands:
This will update the package lists from the software repository.
apt update

This will install the kubeadm version 1.26.0
apt-get install kubeadm=1.26.0-00


This will upgrade Kubernetes controlplane node.
kubeadm upgrade apply v1.26.0
Note that the above steps can take a few minutes to complete.

This will update the kubelet with the version 1.26.0.
apt-get install kubelet=1.26.0-00 

You may need to reload the daemon and restart kubelet service after it has been upgraded.
systemctl daemon-reload
systemctl restart kubelet
===

controlplane ~ ➜  apt-get install kubeadm=1.26.0
Reading package lists... Done
Building dependency tree       
Reading state information... Done
E: Version '1.26.0' for 'kubeadm' was not found

controlplane ~ ✖ apt-get install kubeadm=1.26.0-00
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following packages will be upgraded:
  kubeadm
  
   kubeadm upgrade apply v1.26.0
[upgrade/config] Making sure the configuration is correct:
[upgrade/config] Reading configuration from the cluster...
[upgrade/config] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
=====================
Upgrade the worker node to the exact version v1.26.0

Worker Node Upgraded to v1.26.0
Worker Node Ready


On the node01 node, run the following commands:

If you are on the controlplane node, run ssh node01 to log in to the node01.



This will update the package lists from the software repository.

apt-get update


This will install the kubeadm version 1.26.0.

apt-get install kubeadm=1.26.0-00


This will upgrade the node01 configuration.

kubeadm upgrade node


This will update the kubelet with the version 1.26.0.

apt-get install kubelet=1.26.0-00 


You may need to reload the daemon and restart kubelet service after it has been upgraded.

systemctl daemon-reload
systemctl restart kubelet


Type exit or logout or enter CTRL + d to go back to the controlplane node.





